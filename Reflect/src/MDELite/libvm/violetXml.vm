##Velocity Template for generating Violet XML
##
##
#set($MARKER="//----")
${MARKER}vm2toutput.txt
##
## Keep track of the number of points
#set( $numPoints = 0 )
##
<?xml version="1.0" encoding="UTF-8"?>
##
## Output header info
##
##
<java version="1.7.0_04" class="java.beans.XMLDecoder">
 <object class="com.horstmann.violet.ClassDiagramGraph">
##
##
## Output interfaces first
##
##
#foreach( $face in $violetInterfaceS )
  <void method="addNode">
#if( $face.methods == "''" && $face.name == "''")
#set( $quickCloseObject = "/" )
#else
#set( $quickCloseObject = "" )
#end 
#set( $face.id = $face.id.replace("'", "") ) 
   <object class="com.horstmann.violet.InterfaceNode" id="${face.id}"${quickCloseObject}>
#if( $face.methods != "''" )
#set( $face.methods = $face.methods.replace("'", "") )
#set( $face.methods = $face.methods.replace(";", '
') )
    <void property="methods">
     <void property="text">
      <string>${face.methods}</string>
     </void>
    </void>
#end
#if( $face.name != "''" )
#set( $face.name = $face.name.replace("'", "") )
#set( $face.name = $face.name.replace(";", '
') )
    <void property="name">
     <void property="text">
      <string>${face.name}</string>
     </void>
    </void>
#end
#if ( $quickCloseObject == "" )
   </object>
#end
#set( $quickCloseObject = "" )   
   <object class="java.awt.geom.Point2D$Double" id="Point2D$Double${numPoints}">
    <void class="java.awt.geom.Point2D$Double" method="getField">
     <string>x</string>
     <void method="set">
      <object idref="Point2D$Double${numPoints}">
       <void class="java.awt.geom.Point2D$Double" method="getField">
        <string>y</string>
        <void method="set">
         <object idref="Point2D$Double${numPoints}">
          <void method="setLocation">
           <double>${face.x}</double>
           <double>${face.y}</double>
          </void>
         </object>
         <double>${face.y}</double>
        </void>
       </void>
      </object>
      <double>${face.x}</double>
     </void>
    </void>
   </object>
  </void>
#set( $numPoints = $numPoints + 1 ) 
#end
##
##
## Next output classes
##
##
#foreach( $sc in $violetClassS )
  <void method="addNode">
#if( $sc.methods == "''" && $sc.name == "''")
#set( $quickCloseObject = "/" )
#else
#set( $quickCloseObject = "" )
#end 
#set( $sc.id = $sc.id.replace("'", "") ) 
   <object class="com.horstmann.violet.ClassNode" id="${sc.id}"${quickCloseObject}>
#if( $sc.fields != "''" )
#set( $sc.fields = $sc.fields.replace("'", "") )
#set( $sc.fields = $sc.fields.replace(";", '
') )
    <void property="attributes">
     <void property="text">
      <string>${sc.fields}</string>
     </void>
    </void>
#end
#if( $sc.methods != "''" )
#set( $sc.methods = $sc.methods.replace("'", "") )
#set( $sc.methods = $sc.methods.replace(";", '
') )
    <void property="methods">
     <void property="text">
      <string>${sc.methods}</string>
     </void>
    </void>
#end
#if( $sc.name != "''" )
#set( $sc.name = $sc.name.replace("'", "") )
    <void property="name">
     <void property="text">
      <string>${sc.name}</string>
     </void>
    </void>
#end
#if ( $quickCloseObject == "" )
   </object>
#end
#set( $quickCloseObject = "" )
   <object class="java.awt.geom.Point2D$Double" id="Point2D$Double${numPoints}">
    <void class="java.awt.geom.Point2D$Double" method="getField">
     <string>x</string>
     <void method="set">
      <object idref="Point2D$Double${numPoints}">
       <void class="java.awt.geom.Point2D$Double" method="getField">
        <string>y</string>
        <void method="set">
         <object idref="Point2D$Double${numPoints}">
          <void method="setLocation">
           <double>${sc.x}</double>
           <double>${sc.y}</double>
          </void>
         </object>
         <double>${sc.y}</double>
        </void>
       </void>
      </object>
      <double>${sc.x}</double>
     </void>
    </void>
   </object>
  </void>
#set( $numPoints = $numPoints + 1 )
#end	
##
##
## Output associations/edges
##
##
#foreach( $a in $violetAssociationS)
  <void method="connect">
   <object class="com.horstmann.violet.ClassRelationshipEdge">
##No bentStyle for plain associations
##TRIANGLE should be VHV
#if(( $a.arrow1 == "'TRIANGLE'") || ( $a.arrow2 == "'TRIANGLE'" )) 
    <void property="bentStyle">
     <object class="com.horstmann.violet.BentStyle" field="VHV"/>
    </void>
#end
#if( $a.arrow2 != "''" )
#set( $a.arrow2 = $a.arrow2.replace("'", "") )    
    <void property="endArrowHead">
     <object class="com.horstmann.violet.ArrowHead" field="${a.arrow2}"/>
    </void>
#end
#if( $a.role2 != "''" )
#set( $a.role2 = $a.role2.replace("'", "") ) 
    <void property="endLabel">
     <string>${a.role2}</string>
    </void>
#end 
#if( $a.lineStyle != "''" )
#set( $a.lineStyle = $a.lineStyle.replace("'", "") ) 
    <void property="lineStyle">
     <object class="com.horstmann.violet.LineStyle" field="${a.lineStyle}"/>
    </void>
#end
#if( $a.arrow1 != "''" )
#set( $a.arrow1 = $a.arrow1.replace("'", "") )      
    <void property="startArrowHead">
     <object class="com.horstmann.violet.ArrowHead" field="${a.arrow1}"/>
    </void>
#end
#if( $a.role1 != "''" )
#set( $a.role1 = $a.role1.replace("'", "") )    
    <void property="startLabel">
     <string>${a.role1}</string>
    </void>
#end   
#set( $a.cid1 = $a.cid1.toLowerCase().replace("'","") ) 
#set( $a.cid2 = $a.cid2.toLowerCase().replace("'","") )    
   </object>
   <object idref="${a.cid1}"/>
   <object idref="${a.cid2}"/>
  </void>
#end
 </object>
</java>